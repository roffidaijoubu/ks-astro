---
// src/pages/[slug].astro
import fetchArticles from "../../scripts/fetchArticles";
import Menus from "../../components/Menus.astro";
import TOC from "../../components/TOC.astro";
import Footnotes from "../../components/Footnotes.astro";
import { ViewTransitions } from "astro:transitions";
import OramaSearch from "../../components/OramaSearch.svelte";

const API_URL = "https://ks.valocg.xyz/wp-json/api/articles";

export async function getStaticPaths() {
    const articles = await fetchArticles();
    return articles.map((article) => {
        return { params: { slug: article.slug } };
    });
}

const { slug } = Astro.params;
const res = await fetch(API_URL);
const json = await res.json();

const article = json.find((article) => article.slug === slug);
const title = article.title;

import "../../styles.css";
import "@fontsource/amiri";
import "@fontsource-variable/lora";
import "@fontsource-variable/montserrat";
import "@fontsource/titillium-web";
import { Image } from "astro:assets";
---

<html lang="id-ID" data-theme="dark">
    <head>
        <meta charset="utf-8" />
        <meta name="viewport" content="width=device-width" />
        <link rel="icon" href="/favicon/favicon.ico" />
        <title>{title}</title>
        <script>
            // Astro will do the job of bundling everything for you
            import { getOramaDB, search } from "@orama/plugin-astro/client";

            // We load the DB that we generated at build time, this is an asynchronous
            // operation, so we must either await, or rely on `.then` calls.
            const db = await getOramaDB("mydb");

            // Now we can search inside our DB. Of course, feel free to use it in more
            // interesting ways.
            console.log("Search Results");
            console.log(await search(db, { term: "Ali" }));
        </script>
    </head>

    <body>
        <ViewTransitions />
        <header>
            <div class="">
                <OramaSearch client:load />
            </div>
        </header>
        <div class="flex relative h-full">
            <Menus />
            <main class="px-5 pb-10 grow-0 w-full lg:max-w-[1100px]" transition:animate="fade">
                <div id="main-content">
                    <section class="article-header relative">
                        {
                            article.featured_image && (
                                <div class="relative -mb-5 opacity-40">
                                    <div class="absolute inset-0 bg-gradient-to-t from-base-100 from-5% to-[50%] opacity-100" />
                                    <Image
                                        class="w-full h-80 md:h-[480px] object-cover object-center"
                                        src={article.featured_image.url}
                                        width={article.featured_image.width}
                                        height={article.featured_image.height}
                                        alt={article.title}
                                    />
                                </div>
                            )
                        }
                        <h1
                            class="text-3xl md:text-[40px] font-bold mb-4 font-montserrat relative z-10 text-base-content px-4 pt-5"
                        >
                            {article.title}
                        </h1>
                        <div
                            class="mt-3 mb-5 relative z-10 text-base-content px-4 pb-4"
                        >
                            Waktu membaca: {article.reading_time} menit
                        </div>
                    </section>
                    <article
                        class="prose font-serif max-w-none px-4"
                        set:html={JSON.parse(article.content)}
                    />

                    <Footnotes footnotes={article.footnotes} />
                </div>
            </main>
            <TOC article={article} />
        </div>
    </body>
</html>
