---
// src/pages/[slug].astro
import fetchArticles from "../../scripts/fetchArticles";
import Menus from "../../components/Menus.astro";
import TOC from "../../components/TOC.astro";
import Footnotes from "../../components/Footnotes.astro";
import { ViewTransitions } from "astro:transitions";
import OramaSearch from "../../components/OramaSearch.svelte";

const API_URL = "https://ks.valocg.xyz/wp-json/api/articles";

export async function getStaticPaths() {
    const articles = await fetchArticles();
    return articles.map((article) => {
        return { params: { slug: article.slug } };
    });
}

const { slug } = Astro.params;
const res = await fetch(API_URL);
const json = await res.json();

const article = json.find((article) => article.slug === slug);
const title = article.title;

import "../../styles.css";
import "@fontsource/amiri";
import "@fontsource-variable/lora";
import "@fontsource-variable/montserrat";
import "@fontsource/titillium-web";
import { Img } from "astro-imagetools/components";
import { Head } from "astro-capo";
import { Icon } from "astro-iconify";
import { Image } from "astro:assets";
import { ThemeSwitch } from "astro-color-scheme";
---

<html lang="id-ID" data-theme="dark">
    <Head>
        <meta charset="utf-8" />
        <meta name="viewport" content="width=device-width" />
        <link rel="icon" href="/favicon/favicon.ico" />
        <title>{title}</title>
        <script>
            // Astro will do the job of bundling everything for you
            import { getOramaDB, search } from "@orama/plugin-astro/client";

            // We load the DB that we generated at build time, this is an asynchronous
            // operation, so we must either await, or rely on `.then` calls.
            const db = await getOramaDB("mydb");

            // Now we can search inside our DB. Of course, feel free to use it in more
            // interesting ways.
            console.log("Search Results");
            console.log(await search(db, { term: "Ali" }));
        </script>
    </Head>

    <body>
        <ViewTransitions />
        <header
            class="sticky top-0 z-50 h-16 bg-base-100/80 backdrop-blur-xl flex px-5 items-center"
        >
            <Image
                class="h-10 w-auto hidden dark:block"
                src="/img/logo-dark.svg"
                width="1300"
                height="300"
                alt="Logo"
            />
            <Image
                class="h-10 w-auto dark:hidden"
                src="/img/logo-light.svg"
                width="1300"
                height="300"
                alt="Logo"
            />
            <!-- <div class="">
                <OramaSearch client:load />
            </div> -->
            <div class="ml-auto" transition:persist>
                <ThemeSwitch strategy="checkbox">
                    <label class="cursor-pointer grid place-items-center">
                        <input
                            type="checkbox"
                            value="synthwave"
                            class="toggle theme-controller bg-base-content row-start-1 col-start-1 col-span-2"
                        />
                        <svg
                            class="col-start-1 row-start-1 stroke-base-100 fill-base-100"
                            xmlns="http://www.w3.org/2000/svg"
                            width="14"
                            height="14"
                            viewBox="0 0 24 24"
                            fill="none"
                            stroke="currentColor"
                            stroke-width="2"
                            stroke-linecap="round"
                            stroke-linejoin="round"
                            ><circle cx="12" cy="12" r="5"></circle><path
                                d="M12 1v2M12 21v2M4.2 4.2l1.4 1.4M18.4 18.4l1.4 1.4M1 12h2M21 12h2M4.2 19.8l1.4-1.4M18.4 5.6l1.4-1.4"
                            ></path></svg
                        >
                        <svg
                            class="col-start-2 row-start-1 stroke-base-100 fill-base-100"
                            xmlns="http://www.w3.org/2000/svg"
                            width="14"
                            height="14"
                            viewBox="0 0 24 24"
                            fill="none"
                            stroke="currentColor"
                            stroke-width="2"
                            stroke-linecap="round"
                            stroke-linejoin="round"
                            ><path
                                d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z"
                            ></path></svg
                        >
                    </label>
                </ThemeSwitch>
            </div>
        </header>
        <div class="flex relative h-full">
            <Menus />
            <div class="w-full">
                <div class="flex bg-base-300">
                    <main
                        class="pb-10 grow-0 w-full lg:max-w-[1100px]"
                        transition:animate="fade"
                    >
                        <div id="main-content" class="">
                            <section class="article-header relative">
                                {
                                    article.featured_image && (
                                        <div class="relative -mb-5 opacity-40">
                                            <div class="absolute h-full w-full inset-0 bg-gradient-to-t from-base-300 from-10% to-[90%] opacity-100" />
                                            <Image
                                                class="object-cover w-full h-[400px] md:h-[600px]"
                                                src={article.featured_image.url}
                                                width={article.featured_image.width}
                                                height={article.featured_image.height}
                                                alt={article.title}
                                            />
                                        </div>
                                    )
                                }
                                <h1
                                    class="text-3xl md:text-[40px] font-bold mb-4 font-montserrat relative z-10 text-base-content px-11 pt-5 leading-tight"
                                >
                                    {article.title}
                                </h1>
                                <div
                                    class="mt-3 mb-5 relative z-10 text-base-content px-11 pb-4"
                                >
                                    Waktu membaca: {article.reading_time} menit
                                </div>
                            </section>
                            <article
                                class="prose font-serif max-w-none px-11"
                                set:html={JSON.parse(article.content)}
                            />

                            <Footnotes footnotes={article.footnotes} />
                        </div>
                        <div class="flex mt-8 mx-11 gap-4 mb-8">
                            {
                                article.nav.prev && (
                                    <a
                                        class="flex items-center justify-end w-[50%] btn btn-outline py-6 h-fit px-4"
                                        href={article.nav.prev.url}
                                    >
                                        <Icon
                                            name="heroicons:chevron-left"
                                            class="w-4 h-4 mr-auto"
                                        />
                                        <div class="text-right">
                                            <div class="text-xs mb-2 font-semibold">
                                                Sebelumnya
                                            </div>
                                            <div class="">
                                                {article.nav.prev.title}
                                            </div>
                                        </div>
                                    </a>
                                )
                            }
                            {
                                article.nav.next && (
                                    <a
                                        class="flex items-center justify-start w-[50%] btn btn-outline py-6 h-fit px-4"
                                        href={article.nav.next.url}
                                    >
                                        <div class="text-left">
                                            <div class="text-xs mb-2 font-semibold">
                                                Selanjutnya
                                            </div>
                                            <div class="">
                                                {article.nav.next.title}
                                            </div>
                                        </div>
                                        <Icon
                                            name="heroicons:chevron-right"
                                            class="w-4 h-4 ml-auto"
                                        />
                                    </a>
                                )
                            }
                        </div>
                    </main>
                    <TOC article={article} />
                </div>
            </div>
        </div>
    </body>
</html>
